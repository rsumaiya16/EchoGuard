{"ast":null,"code":"var _jsxFileName = \"/Users/sumaiyarahman/Desktop/echoGuard/frontend/src/screens/LoginScreen.jsx\",\n  _s = $RefreshSig$();\n// src/screens/LoginScreen.jsx\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginScreen = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Handle login logic here (e.g., validation or redirect to home page)\n    console.log('Logged in with:', email, password);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center items-center h-screen bg-gray-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-8 rounded-lg shadow-md w-96\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center text-2xl font-semibold mb-6\",\n        children: \"Login to EchoGuard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            className: \"block text-gray-700\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            className: \"w-full px-4 py-2 mt-2 border rounded-md\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            className: \"block text-gray-700\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            className: \"w-full px-4 py-2 mt-2 border rounded-md\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"w-full py-2 bg-blue-600 text-white rounded-md\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginScreen, \"TSZhDBNy8CmbxXgprY/vvMmTG1Q=\");\n_c = LoginScreen;\nexport default LoginScreen;\nvar _c;\n$RefreshReg$(_c, \"LoginScreen\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","LoginScreen","_s","email","setEmail","password","setPassword","handleSubmit","e","preventDefault","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/Users/sumaiyarahman/Desktop/echoGuard/frontend/src/screens/LoginScreen.jsx"],"sourcesContent":["// src/screens/LoginScreen.jsx\n\nimport React, { useState } from 'react';\n\nconst LoginScreen = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Handle login logic here (e.g., validation or redirect to home page)\n    console.log('Logged in with:', email, password);\n  };\n\n  return (\n    <div className=\"flex justify-center items-center h-screen bg-gray-100\">\n      <div className=\"bg-white p-8 rounded-lg shadow-md w-96\">\n        <h2 className=\"text-center text-2xl font-semibold mb-6\">Login to EchoGuard</h2>\n        <form onSubmit={handleSubmit}>\n          <div className=\"mb-4\">\n            <label htmlFor=\"email\" className=\"block text-gray-700\">Email</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              className=\"w-full px-4 py-2 mt-2 border rounded-md\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n            />\n          </div>\n          <div className=\"mb-6\">\n            <label htmlFor=\"password\" className=\"block text-gray-700\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              className=\"w-full px-4 py-2 mt-2 border rounded-md\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n            />\n          </div>\n          <button\n            type=\"submit\"\n            className=\"w-full py-2 bg-blue-600 text-white rounded-md\"\n          >\n            Login\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginScreen;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMS,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACAC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAER,KAAK,EAAEE,QAAQ,CAAC;EACjD,CAAC;EAED,oBACEL,OAAA;IAAKY,SAAS,EAAC,uDAAuD;IAAAC,QAAA,eACpEb,OAAA;MAAKY,SAAS,EAAC,wCAAwC;MAAAC,QAAA,gBACrDb,OAAA;QAAIY,SAAS,EAAC,yCAAyC;QAAAC,QAAA,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/EjB,OAAA;QAAMkB,QAAQ,EAAEX,YAAa;QAAAM,QAAA,gBAC3Bb,OAAA;UAAKY,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACnBb,OAAA;YAAOmB,OAAO,EAAC,OAAO;YAACP,SAAS,EAAC,qBAAqB;YAAAC,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACpEjB,OAAA;YACEoB,IAAI,EAAC,OAAO;YACZC,EAAE,EAAC,OAAO;YACVT,SAAS,EAAC,yCAAyC;YACnDU,KAAK,EAAEnB,KAAM;YACboB,QAAQ,EAAGf,CAAC,IAAKJ,QAAQ,CAACI,CAAC,CAACgB,MAAM,CAACF,KAAK,CAAE;YAC1CG,QAAQ;UAAA;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNjB,OAAA;UAAKY,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACnBb,OAAA;YAAOmB,OAAO,EAAC,UAAU;YAACP,SAAS,EAAC,qBAAqB;YAAAC,QAAA,EAAC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC1EjB,OAAA;YACEoB,IAAI,EAAC,UAAU;YACfC,EAAE,EAAC,UAAU;YACbT,SAAS,EAAC,yCAAyC;YACnDU,KAAK,EAAEjB,QAAS;YAChBkB,QAAQ,EAAGf,CAAC,IAAKF,WAAW,CAACE,CAAC,CAACgB,MAAM,CAACF,KAAK,CAAE;YAC7CG,QAAQ;UAAA;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNjB,OAAA;UACEoB,IAAI,EAAC,QAAQ;UACbR,SAAS,EAAC,+CAA+C;UAAAC,QAAA,EAC1D;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACf,EAAA,CA/CID,WAAW;AAAAyB,EAAA,GAAXzB,WAAW;AAiDjB,eAAeA,WAAW;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}